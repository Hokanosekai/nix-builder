name: "Build ISO"
on:
  workflow_dispatch:
    inputs:
      hostname:
        type: string
        description: "Name of this machine"
        default: raspi
        required: false
      username:
        type: string
        description: "The user used to connect and operate to this machine"
        required: false
      time_zone:
        type: string
        description: "Configure timezone of this machine"
        default: "Europe/Amsterdam"
        required: false
      raspberry_model:
        type: choice
        description: "What rbp do you have?"
        options:
          - "3"
          - "4"
        required: false
      # No mechanism yet to provide multiple keys
      ssh_key_name:
        type: string
        description: File name of the SSH Key
        default: 'main.pub'
        required: false
      ssh_key:
        type: string
        description: Content of the SSH Key
        required: false
      wifi_enabled:
        type: boolean
        default: true
        description: Should the iso have wifi configured?
      wifi_network_name:
        type: string
        description: Name of the wifi connection
        required: false
      wifi_network_psk:
        type: string
        description: Password of the wifi connection
        required: false
env:
  INPUT_HOSTNAME: ${{ github.event.inputs.hostname }}
  INPUT_USERNAME: ${{ github.event.inputs.username }}
  INPUT_TIME_ZONE: ${{ github.event.inputs.time_zone }}
  INPUT_RASPBERRY_MODEL: ${{ github.event.inputs.raspberry_model }}
  INPUT_SSH_KEY_NAME: ${{ github.event.inputs.ssh_key_name }}
  INPUT_SSH_KEY: ${{ github.event.inputs.ssh_key }}
  INPUT_WIFI_ENABLED: ${{ github.event.inputs.wifi_enabled }}
  INPUT_WIFI_NETWORK_NAME: ${{ github.event.inputs.wifi_network_name }}
  INPUT_WIFI_NETWORK_PSK: ${{ github.event.inputs.wifi_network_psk }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v18
      with:
        extra_nix_config: |
          system-features = aarch64-linux arm-linux
    - run: |
         DEBIAN_FRONTEND=noninteractive
         sudo apt-get update -q -y && sudo apt-get install -q -y tree qemu-system-aarch64 qemu-efi binfmt-support qemu-user-static
    - run: nix flake check --impure
    - run: nix flake show
    - run: nix build --impure --option system aarch64-linux --option sandbox false --extra-platforms aarch64-linux .#nixos
    - run: tree result
    - uses: actions/upload-artifact@v3
      with:
        name: rpi-iso
        path: result/sd-image
        retention-days: 5
